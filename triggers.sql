/* TRIGGER */

CREATE TABLE PRODUTOS(
 IDPRODUTO INT IDENTITY PRIMARY KEY,
 NOME VARCHAR(50) NOT NULL, 
 CATEGORIA VARCHAR(30) NOT NULL,
 PRECO NUMERIC(10,2) NOT NULL

);
GO

CREATE TABLE HISTORICO(
	 IDPERACAO INT  PRIMARY KEY IDENTITY,
	 PRODUTO VARCHAR(50) NOT NULL, 
	 CATEGORIA VARCHAR(30) NOT NULL,
	 PRECOANTIGO NUMERIC(10,2) NOT NULL,
	 PRECONOVO NUMERIC(10,2) NOT NULL,
	 DATA DATETIME,
	 USUARIO VARCHAR(30),
	 MENSAGEM VARCHAR(100)

);
GO

INSERT INTO PRODUTOS VALUES('LIVRO SQL SERVER', 'LIVROS', 98.00)
INSERT INTO PRODUTOS VALUES('LIVRO ORACLE', 'LIVROS', 50.00)
INSERT INTO PRODUTOS VALUES('LICENÇA POWER CENTER', 'SOFTWARES', 45000.00)
INSERT INTO PRODUTOS VALUES('NOTEBOOK I7', 'COMPUTADORES', 3100.00)
INSERT INTO PRODUTOS VALUES('LIVRO BUSINESS INTELIGENCE ', 'LIVROS', 90.00)

SELECT*FROM PRODUTOS
SELECT*FROM HISTORICO


/*VERIFICANDO O USUÁRIO DO BANCO*/
SELECT SUSER_NAME()
GO

/* TRIGGER DE DADOS - DML( DATA MANIPULATION LANGUAGE */

CREATE TRIGGER TRG_ATUALIZA_PRECO 
ON DBO.PRODUTOS
FOR UPDATE
AS 
    DECLARE @IDPRODUTO INT
	DECLARE @PRODUTO VARCHAR(30)
	DECLARE @CATEGORIA VARCHAR(10)
	DECLARE @PRECO NUMERIC(10,2)
	DECLARE @PRECONOVO NUMERIC(10,2)
	DECLARE @DATA DATETIME
	DECLARE @USUARIO VARCHAR(30)
	DECLARE @ACAO VARCHAR(100)

	
	--PRIMEIRO BLOCO

	SELECT @IDPRODUTO = IDPRODUTO FROM inserted
	SELECT @PRODUTO = NOME FROM inserted
	SELECT @CATEGORIA = CATEGORIA FROM inserted
	SELECT @PRECO = PRECO FROM	deleted
	SELECT @PRECONOVO = PRECO FROM inserted
	
	--SEGUNDO BLOCO
     SET @DATA  = GETDATE()
	 SET @USUARIO = SUSER_NAME()
	 SET @ACAO = 'VALOR INSERIDO PELA TRIGGER TRG_ATUALIZA_PRECO'


	 INSERT INTO HISTORICO 
	 (PRODUTO, CATEGORIA, PRECOANTIGO, PRECONOVO, DATA,USUARIO, MENSAGEM)
	 VALUES
	 (@PRODUTO, @CATEGORIA, @PRECO, @PRECONOVO, @DATA, @USUARIO, @ACAO)

	 PRINT 'TRIGGER EXECUTADA COM SUCESSO'
GO

/*EXECUTANDO UM UPDATE*/
UPDATE PRODUTOS SET NOME = 'LIVRO C#'
WHERE IDPRODUTO = 1
GO

SELECT * FROM PRODUTOS
SELECT * FROM HISTORICO


/* PROGRAMANDO A TRIGGER EM UMA COLUNA */
DROP TRIGGER TRG_ATUALIZA_PRECO
GO

CREATE TRIGGER TRG_ATUALIZA_PRECO 
ON DBO.PRODUTOS
FOR UPDATE AS 
IF UPDATE(PRECO)
BEGIN

    DECLARE @IDPRODUTO INT
	DECLARE @PRODUTO VARCHAR(30)
	DECLARE @CATEGORIA VARCHAR(10)
	DECLARE @PRECO NUMERIC(10,2)
	DECLARE @PRECONOVO NUMERIC(10,2)
	DECLARE @DATA DATETIME
	DECLARE @USUARIO VARCHAR(30)
	DECLARE @ACAO VARCHAR(100)

	
	--PRIMEIRO BLOCO

	SELECT @IDPRODUTO = IDPRODUTO FROM inserted
	SELECT @PRODUTO = NOME FROM inserted
	SELECT @CATEGORIA = CATEGORIA FROM inserted
	SELECT @PRECO = PRECO FROM	deleted
	SELECT @PRECONOVO = PRECO FROM inserted
	
	--SEGUNDO BLOCO
     SET @DATA  = GETDATE()
	 SET @USUARIO = SUSER_NAME()
	 SET @ACAO = 'VALOR INSERIDO PELA TRIGGER TRG_ATUALIZA_PRECO'


	 INSERT INTO HISTORICO 
	 (PRODUTO, CATEGORIA, PRECOANTIGO, PRECONOVO, DATA,USUARIO, MENSAGEM)
	 VALUES
	 (@PRODUTO, @CATEGORIA, @PRECO, @PRECONOVO, @DATA, @USUARIO, @ACAO)

	 PRINT 'TRIGGER EXECUTADA COM SUCESSO'
END
GO

UPDATE PRODUTOS SET PRECO = 300.00
WHERE IDPRODUTO = 2
GO 

UPDATE PRODUTOS SET NOME = 'LIVRO JAVA'
WHERE IDPRODUTO = 2
GO 

SELECT *FROM HISTORICO


/* variaveis com SELECT */

CREATE TABLE RESULTADOS(
   IDRESULTADO INT PRIMARY KEY IDENTITY ,
   RESULTADO INT
)
GO

INSERT INTO RESULTADOS VALUES((SELECT 10+10))

SELECT*FROM RESULTADOS

/*ATRIBUINDO SELECTS A VARIAVEIS - BLOCO ANONIMO USADO PRA TESTES */


DECLARE
        @RESULTADO INT 
		SET @RESULTADO = (SELECT 50+85)
		INSERT INTO RESULTADOS VALUES(@RESULTADO)
		PRINT 'VALOR INSERIDO NA TABELA: ' + CAST(@RESULTADO AS VARCHAR)
		GO

/* TRIGGER UPDATE*/
CREATE TABLE EMPREGADO(
  IDEM INT PRIMARY KEY,
  NOME VARCHAR(30),
  SALARIO MONEY,
  IDGERENTE INT
)

ALTER TABLE EMPREGADO ADD CONSTRAINT  FK_GERENTE
FOREIGN KEY(IDGERENTE) REFERENCES EMPREGADO(IDEM)

INSERT INTO EMPREGADO VALUES(1, 'CLARA', 5000.00, NULL)
INSERT INTO EMPREGADO VALUES(2, 'CELIA', 4000.00, 1)
INSERT INTO EMPREGADO VALUES(3, 'JOÃO', 4000.00, 1)
GO


CREATE TABLE HIST_SALARIO(
  IDEMPREGADO INT,
  ANTIGOSAL MONEY,
  NOVOSAL MONEY,
  DATA DATETIME

  )
  GO

  CREATE TRIGGER TG_SALARIO 
  ON DBO.EMPREGADO
  FOR UPDATE AS 
  IF UPDATE(SALARIO)
BEGIN 
    INSERT INTO HIST_SALARIO
	(IDEMPREGADO, ANTIGOSAL, NOVOSAL, DATA)
	SELECT D.IDEM, D.SALARIO, I.SALARIO, GETDATE()
	FROM DELETED D, inserted I
	WHERE D.IDEM = I.IDEM

END
GO

UPDATE EMPREGADO SET SALARIO  = SALARIO * 1.1
GO


SELECT * FROM EMPREGADO

SELECT * FROM HIST_SALARIO

/* SALARIO ANTIGO, SALARIO NOVO, DATA E NOME DO EMPREGADO*/

 CREATE TRIGGER TG_SA 
  ON DBO.EMPREGADO
  FOR UPDATE AS 
  IF UPDATE(SALARIO)
BEGIN 
    INSERT INTO HIST_SALARIO
	(IDEMPREGADO, ANTIGOSAL, NOVOSAL,NOME, DATA)
	SELECT D.IDEM, D.SALARIO, I.SALARIO,D.NOME, GETDATE()
	FROM DELETED D, inserted I
	WHERE D.IDEM = I.IDEM

END
GO
 
 ALTER TABLE HIST_SALARIO ADD NOME VARCHAR(30) 


 
/* SALARIO ANTIGO, SALARIO NOVO, DATA E NOME DO EMPREGADO - CRIANDO TABELA*/

CREATE TABLE SALARIO_RANGE(
  MINSAL MONEY,
  MAXSAL MONEY,
)
GO

INSERT INTO SALARIO_RANGE VALUES(3000.00,6000.00)


CREATE TRIGGER TG_RANGE
ON DBO.EMPREGADO
FOR INSERT, UPDATE
AS 
    DECLARE
	    @MINSAL MONEY,
		@MAXSAL MONEY,
		@ATUALSAL MONEY

	SELECT  @MINSAL = MINSAL, @MAXSAL = MAXSAL FROM SALARIO_RANGE


	SELECT @ATUALSAL = I.SALARIO
	FROM INSERTED I

	IF(@ATUALSAL <@MINSAL)
	BEGIN 
	     RAISERROR('SALARIO MENOR QUE O PISO', 16,1)
		 ROLLBACK TRANSACTION 

    END 

	IF(@ATUALSAL > @MAXSAL)
	BEGIN 
	 RAISERROR('SALARIO MAIOR QUE O TETO', 16,1)
		 ROLLBACK TRANSACTION 
	END 
	GO

	UPDATE EMPREGADO SET SALARIO = 9000.00
	WHERE IDEM = 1


	UPDATE EMPREGADO SET SALARIO = 1000.00
	WHERE IDEM = 1

	/* VERIFICANDO O TEXTO DE UMA TRIGGER */
	SP_HELPTEXT TG_RANGE
	GO